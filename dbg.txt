=== levels/Spacial Invasion ===

$19967210826470 XXX
$16294185981398 XXX
$11505369795084 XXX
$10515630949378 XXX


=== components/OutputQword ===

$43552728118031 Output


=== components/Output 1 ===

$12242923444593 Output


=== levels/RAM ===

$17967666262990 XXX
$13520918982355 XXX


=== levels/byte_less_i ===

$16755383054285 XXX
$19006843777401 XXX
$46083799633716 Is {input_1} less than {input_2}?


=== ui/toggles/level_map ===

$71951682957395 Level map


=== ui/state_ui/title_screen/exit ===

$12639868461113 exit


=== misc/button_next ===

$50213503063080 Next tick (Hotkey: F5)


=== levels/saving_bytes ===

$10633476398156 XXX
$15510981129613 XXX
$13502950630653 XXX
$19109563882664 XXX
$16372198430230 XXX
$11467279617581 XXX
$15498440508450 XXX
$10080722944246 XXX
$18873598212433 XXX
$15582618410991 XXX


=== levels/maze ===

$13225915898937 XXX
$17275059688693 XXX
$13741358519166 XXX
$11103446544344 XXX
$19331074553774 XXX


=== misc/level_gate_component_icon ===

$83440578602427 Unlocks component


=== levels/any_doubles ===

$16587030847545 XXX
$14373083988184 XXX


=== levels/byte_constant ===

$12641789008694 XXX


=== components/Output 1 + 1B ===

$81929942356043 Output


=== levels/call_ret ===

$15840165316981 XXX
$19416009887091 XXX
$19369640789869 XXX
$15463931654475 XXX


=== levels/push_pop2 ===

$10062117579269 XXX
$14685569269160 XXX
$18561605111721 PUSH {input} on stack
$59658696292688 POP {value} off stack


=== levels/odd_ticks ===

$18510295620397 XXX
$16987046679863 XXX
$16037516781370 XXX
$17588119878416 XXX


=== main_scripts/leg_level ===

$70383685548547 REG 
$53021804895845 ANDi
$69956969985790 ORi
$85913831661289 IF_LESS
$11144256835662 XORi
$61412773713567 SUB
$52344899983501 IF_LESS_OR_EQUAL
$89945092889418 SUBi
$89011349770597 NOT
$71559031724238 IF_NOT_EQUAL
$40520283279584 XOR
$71204580217527 NOTi
$71195301111400 ADDi
$98178474649432 IF_GREATER_OR_EQUAL
$68187490877029 IF_EQUAL
$50722296752142 INPUT
$43723329256095 REG {nr}
$37810243909140 COUNTER
$44009845985661 ADD
$68666991962246 OR
$79492115258673 IF_GREATER
$64519909700148 AND
$49810487048038 COUNTER
$18236360532765 OUTPUT


=== ui/options/Robot Controls ===

$58799802152286 Robot Controls


=== misc/solution_option ===

$21618236951146 View solution


=== misc/run_fast ===

$49363678936533 Run ticks faster (right click: change target speed)


=== misc/delay_overlay ===

$85430022417382 Show delay


=== misc/options ===

$49251062339706 options


=== levels/turing_complete ===

$15326252036920 XXX
$16583885726240 XXX
$10510746154639 XXX
$10317244906317 XXX
$14587485007736 XXX
$19649119273248 XXX


=== components/Input 1 ===

$12746117288689 Input


=== levels/Second Tick ===

$14355963067874 XXX
$17526582195506 XXX
$15726318553190 XXX
$19277843280528 XXX
$15296208528991 XXX


=== levels/divide ===

$16412715945615 XXX
$14525870461271 XXX
$76454016047920 {numerator}/{denominator} = {quotient}, remainder {remainder}


=== levels/buffer ===

$10260210687588 XXX
$13309706297402 XXX
$17005228759908 XXX
$18349621873762 XXX
$15504762262759 XXX


=== components/Output 4 ===

$90190739202646 Output


=== misc/select_color ===

$97461374731210 Wire color


=== levels/component_factory ===

$17077079648771 XXX
$19551383617326 XXX
$12516102012088 XXX
$14712417427860 XXX
$15549447390000 XXX


=== ui/state_ui/state_ui_output_bit ===

$40754755480566 Output


=== misc/instr_delete ===

$91861509153454 Delete


=== misc/instruction_expand ===

$44690074039467 Toggle define rules


=== levels/Delicious Order ===

$10160261151833 XXX
$16027225087666 XXX


=== levels/ai_showdown ===

$14940806461794 XXX
$17297225655678 XXX
$18848103966031 XXX
$11794110848012 XXX


=== misc/ui_comment ===

$69987793052607 Wire comment (Click on wire)


=== levels/delay_level ===

$19986989895202 XXX
$11246430085016 XXX
$12817338693402 XXX


=== levels/push_pop ===

$78804623186243 OUTPUT
$49526452710191 DON'T POP
$58050047963238 VALUE
$30926395960020 PUSH
$19245209470436 XXX
$12227209887733 XXX
$85171087236638 ENABLE
$15662660252584 XXX
$23726790986805 POP
$62469306234943 DON'T PUSH
$46948857059388 POP value {value} off stack
$18761197388580 XXX
$65188797398656 PUSH {value} on stack


=== levels/Tower of Radioactive Alloy ===

$13757925963562 XXX
$10750976989948 XXX
$19265994465686 XXX
$35120623183961 Move from {source} to {destination}
$15855497886737 XXX


=== levels/The Product of Nibbles ===

$14622683750375 XXX
$14957949958941 XXX
$17331397914567 XXX
$19136817138607 XXX
$13232094477834 XXX
$13549246864135 XXX
$15857218442751 XXX
$18132100348781 XXX
$14533861483435 XXX
$10430040077737 XXX
$10274387271390 XXX
$16301538038805 XXX
$83694551809785 Multiply {num1} and {num2}


=== components/Input 1 Byte ===

$40943344093513 Input


=== levels/signed_negator ===

$10866019808027 XXX
$10400106910274 XXX


=== levels/byte_and ===

$15885763626223 XXX


=== ui/toggles/level_log2 ===

$91515053618360 Manual


=== main_scripts/functions ===

$11467644007149 Counter {nr}
$10533010562232 DELAY SCORE: {delay}
$87591753278764 Reg {nr}
$29169064199243 Output {nr}
$13327741293223 Input {nr}
$32508339206292 NAND SCORE: {nand}


=== levels/odd_number_of_signals ===

$16173829560311 XXX
$85589489148198 Components spent\n{nr} of 3
$18288998816979 XXX


=== levels/or_gate_3 ===

$15448906128695 XXX


=== ui/state_ui/title_screen/play ===

$82533529573294 play


=== nim/backend_lib/level_list ===

$58391129129347 Registers
$45936227746026 Counter
$12946639957230 NOT Gate
$16881141174140 Binary Racer
$37136208388559 SR Latch
$32191988336459 Saving Gracefully
$59136962133320 Logic Engine
$30920780473397 Circular Dependency
$83321010943153 Counting Signals
$58769021955965 3 bit decoder
$78673715398197 Immediate Values
$49679174636208 Byte XOR
$40356575891647 Byte OR
$44393538021725 Calibrating Laser Cannons
$87426564872318 Divide
$61228036919534 Tower of Radioactive Alloy
$24593959732668 Signed negator
$19487493622742 Half Adder
$26705128002562 Conditions
$94163943335575 The Sandbox
$64662599400870 Bit Inverter
$27566801288091 Component Factory
$14193654974055 Signed Less
$14522992467987 OR Gate
$74096060570427 Wide Instructions
$30630492494839 Byte NOT
$11457737665157 Wire Spaghetti
$59485174474959 Delicious Order
$85514901357243 Adding Bytes
$98013649264532 Stack
$35790581910835 Second Tick
$94979277765051 Robot Racing
$13303326918621 NAND Gate
$16463062897451 Crude Awakening
$77495536880911 NOR Gate
$61466151084505 Spacial Invasion
$20858506932774 AND Gate
$28827008935802 The Lab
$92696642439976 AI Showdown
$62326481348276 The Maze
$74512388889988 Arithmetic Engine
$50884376329157 Little Box
$70651296323768 XOR Gate
$31140969090253 Planet Names
$42873691377272 Add 5
$36114120875026 Storage cracker
$45773199639367 Odd ticks
$17198602105978 Unsigned Less
$43018398941741 Always On
$68155633878444 Delay
$15420972347773 RAM
$40549516333234 Byte AND
$33343343932901 Turing Complete
$95989050249094 Bigger AND Gate
$69830943995038 One Way
$63331549672739 Opcodes
$87626070552799 Full Adder
$13219675195117 ODD Number of Signals
$62167495140389 Shift
$28985439820134 The Product of Nibbles
$94896856420525 XNOR Gate
$25805639594354 Program
$57870391153000 Immediate Values
$56272944092958 Further Delayed Lines
$96825664933181 Unseen Fruit
$86717899742637 Saving Bytes
$53092952738479 Input Selector
$70993791338383 XOR
$77453667419150 Instruction Decoder
$17750429607702 1 bit decoder
$79570913613529 Double the Number
$59939822079116 Negative Numbers
$96898830278153 Byte Constant
$50992859018018 Switch
$49328023903824 Equality
$74292408260828 Calculations
$45480765206717 Conditionals
$71126291573555 Double Trouble
$33132016601448 PUSH and POP
$75225719777307 Water World
$64615090872051 Functions
$84208736840052 Masking Time
$91954159574064 Bigger OR Gate
$36221227239949 Dancing Machine


=== ui/options/Controls ===

$53266310714298 Control


=== levels/3_decoder ===

$19231618567710 XXX
$14293122338496 XXX


=== levels/test_lab ===

$11038144815919 XXX
$15446846177093 XXX
$16072814175447 XXX


=== levels/Opcodes ===

$19693461238792 XXX
$38976231780455 Watched state {nr} should point to a register or custom component with a register inside
$20916717363300 Watched state {nr} should point to the output
$18189600217529 XXX
$13450117997204 XXX
$77044880242883 Watched state {nr} should point to the counter
$13870568875751 XXX
$10303603301757 XXX
$17495651785164 XXX


=== levels/Nor GATE ===

$11362258372706 XXX


=== misc/run ===

$67345621265845 Run ticks (Hotkey: F6)


=== levels/byte_not ===

$14196498898485 XXX
$12982025748137 XXX
$10294533225655 XXX
$14958585065722 XXX


=== levels/Storage cracker ===

$11910674853271 XXX
$17462419719036 XXX
$11183892008673 XXX


=== levels/constants ===

$17098439090371 XXX


=== misc/circuit_draw ===

$59836059268386 New circuit (Hotkey: Alt & drag)


=== misc/watchable_state ===

$58678516111149 Edit watched state


=== levels/program ===

$16693098943939 XXX
$19686277478479 XXX


=== levels/wide_instrucitons ===

$13709034294291 XXX
$17693995237077 XXX
$19068760748550 XXX
$65009239162932 The correct outputs were {a} and {b}
$19203973423116 XXX
$17409169138995 XXX


=== components/Input 3 ===

$70689623552857 Input


=== levels/Arithmetic Engine ===

$16434409050195 XXX


=== levels/capitalize ===

$14894954428144 XXX
$13301617098810 XXX
$11647445869837 XXX
$11201813578269 XXX


=== levels/byte_equal ===

$17156565273196 XXX


=== levels/Calculations ===

$14458828731919 XXX
$13013863429580 XXX


=== levels/Counter ===

$17701404772563 XXX
$17940006660359 XXX
$17263901743088 XXX
$68874699768861 Overwrite with {value}
$17883663978196 XXX
$19407121413983 XXX
$10555159894041 XXX


=== components/InputQword ===

$31709565019284 Input


=== ui/options/General ===

$36195388998735 General


=== levels/not_gate ===

$19085882338208 XXX
$10042327259531 XXX
$14042842216181 XXX
$10604720087324 XXX
$19798729463813 XXX
$18442122157391 XXX
$12880883686501 XXX
$18780831606716 XXX


=== levels/byte_shift ===

$16023356915123 XXX
$37338672894296 Shift the bits of {value} left by {amount}
$10598344098990 XXX
$16216408139965 XXX
$18137790657923 XXX
$18518173140953 XXX


=== misc/factory ===

$53123649343022 Component Factory


=== levels/registers ===

$10661964231175 XXX
$10211777161405 XXX
$15888345020710 XXX
$14823499195861 XXX
$14108238519744 XXX
$14411286553593 XXX
$14041158687959 XXX


=== components/Output 2 ===

$73255344581755 Output


=== levels/xnor ===

$11090938799865 XXX


=== levels/decoder ===

$16133643476631 XXX
$18435544383511 XXX
$18198768092383 XXX
$18945946395447 XXX
$16785126425267 XXX
$15440615199508 XXX
$12671132029272 XXX
$15105859227432 XXX
$12068329066372 XXX
$11382827588408 XXX
$12976424717611 XXX
$12532951884542 XXX


=== levels/bit_inverter ===

$15769391111364 XXX
$15272914096446 XXX
$14944872827527 XXX
$16125025706490 XXX
$13224963076378 XXX


=== levels/ram_block ===

$17142958857584 XXX
$12901484249817 XXX
$14218335256117 XXX
$19282543476901 XXX
$13765566466116 XXX
$15908016538045 XXX
$16196915566111 XXX
$32676754026463 Save {value} and load
$30856781458049 Save {value}
$14259545926196 XXX
$12306130287676 XXX
$16217965518477 XXX
$10891070331034 XXX
$18084166025569 XXX
$13082830776248 XXX
$17473197268827 XXX
$13555908976270 XXX
$10311371309532 XXX
$16925432534232 XXX
$13644027370563 XXX
$12933801309767 XXX
$12291627335021 XXX


=== misc/score_sync ===

$76911045833478 score sync


=== misc/level_gate_manual_icon ===

$22002156022920 Unlocks manual entry


=== misc/level_gate_unlocks_unknown ===

$76731326010721 Unlocks something unknown


=== ui/top_bar/nand_score ===

$16224450605442 NAND SCORE:


=== misc/hdd_edit_button ===

$38481453712356 Edit memory


=== levels/Switch ===

$19935950225431 XXX
$77731476872422 Your answer {your_answer}\nCorrect answer {correct_answer}


=== levels/Further Delayed Lines ===

$17366913897135 XXX
$17497477227061 XXX


=== levels/negative_numbers ===

$12574817679356 XXX
$17231048881956 XXX
$70755151984986 {a} should be {b}
$11067230116844 {number} is not representable
$62744038163781 OK
$19118970740682 XXX
$15431436023571 You have two ways to represent 0\nWhich leads to 0 + 1 = 0
$28284583096369 1 plus -1 does not equal 0\n  
$57604042654667 {number} is not representable


=== levels/Masking Time ===

$19351773688761 Ticks left: {ticks_left}  Input: {input}
$16810715868480 XXX
$17375862136921 XXX
$65431688078892
In this level you are given a number as input and you should return that number modulo 4 as a result.

The challenge is that you only have {ticks_per_test} ticks to output the desired result.

Note, you don't need to change your hardware, you just have to figure out the trick to do modulo 4 quickly.
Use [color=#e63e5b][url=masking_time]this hint[/url][/color] if you get stuck.
$81055582534899 Anyway new year is coming up and we want you to calculate the weekday of everyone's birthday. We will give you the date and all you have to do is return the weekday within {ticks_per_test} ticks.


=== levels/robot_race ===

$15403032472607 XXX
$19966247197959 XXX


=== levels/NAND Gate ===

$17420270098223 XXX
$11034378482152 XXX
$18270083417453 XXX
$19208664264770 XXX
$17923274216766 XXX
$14777350869870 XXX
$17994568832660 XXX


=== components/Input 2 ===

$86870364449392 Input


=== main_scripts/overture_level ===

$27259865408750 Next tick the counter value will be {next}, it should be {expected}
$95030012922256 Input should only be enabled when reading from input
$12873109232054 Expected output {expected}, got {got}
$47188699762650 Output not enabled
$28026304798371 Output should only be enabled when outputting
$85260864781281 Input not enabled
$96569633331621 Load {value} into REG 0
$83829200305236 Expected output {expected}, got {got}


=== levels/byte_adder ===

$16888130664370 XXX
$18732877690173 XXX


=== misc/ide_control_link ===

$80788685813993 Robot controls


=== levels/saving_gracefully ===

$14295883660596 XXX
$14950983012226 XXX
$14837033157870 XXX
$12474728041023 XXX
$13045361823397 XXX
$13740696609075 XXX


=== levels/Calibrating Laser Cannons ===

$11331851878040 XXX
$11023157447564 XXX
$15260627694444 XXX
$12669851602178 XXX
$21601709632806 What is 2π × {radius}?
$16954408093587 XXX


=== levels/circular_dependency ===

$16336401898647 XXX
$13880985462901 XXX
$18010308863615 XXX
$13520037133129 XXX
$11316928751185 XXX


=== ui/top_bar/scores ===

$56840961921536 NAND SCORE: \nDELAY SCORE:


=== levels/Water World ===

$13739681561355 XXX
$19185457941725 XXX
$18940654086036 XXX
$14706805272652 XXX
$12881972193444 XXX


=== misc/profile ===

$32835651830157 profile


=== levels/Dancing Machine ===

$14975070588197 XXX
$15955150920362 XXX


=== components/Input 4 ===

$11447837612693 Input


=== levels/Add 5 ===

$11540713506719 XXX
$19281970848639 XXX
$17770257567603 XXX
$19446152707984 XXX
$80639633676917 Input:
$12078933051174 XXX
$11074247151096 XXX
$18134632592542 XXX


=== misc/program_edit_signals ===

$98772447663910 Edit watched state


=== misc/credits ===

$15234594767991 credits


=== misc/specifications ===

$68054407020318 Instructions


=== misc/delete ===

$53448014080434 Delete (Hotkey: Right click)


=== misc/controls2 ===

$38773676077206 Edit Instructions


=== levels/1_decoder ===

$16057674753878 XXX


=== levels/byte_mux ===

$49305362057225 Your answer {your_answer}\nCorrect answer {correct_answer} (Input {input})
$18296416014178 XXX
$17093993196554 XXX


=== components/Input1_1B ===

$10517158300617 Input


=== misc/factory_back ===

$98930461722118 Return to level


=== misc/component_factory_toggle ===

$55499239951858 Component Factory


=== levels/unseen_fruit ===

$13023474026617 XXX
$14259900563789 XXX
$17070232883226 XXX


=== ui/toggles/negative_numbers ===

$51779464354363 Toggle signed numbers


=== misc/reset ===

$39440928972984 Reset (Hotkey: F4)


=== levels/conditions ===

$12951779797594 XXX
$16407231803964 XXX
$16742265812068 XXX
$17616699231679 XXX
$16632557438774 XXX
$18234235689107 XXX
$12429396872036 XXX
$19014698800906 XXX
$13680487623452 XXX
$12706881725738 XXX


=== levels/full_adder ===

$17063157033479 XXX


=== levels/or_gate ===

$12749704931323 XXX
$11472059692644 XXX


=== misc/factory_back_inner ===

$12211557416281 Return to level


=== nim/backend ===

$0
.int64
    if id notin self.translation_entries: return text
    return self.translation_entries[id]

  proc get_translation(gd_id: int64): string {.gdExport.} =
    let id = (gd_id - 3133700000000000000).int64
    if id notin self.translation_entries: return 


=== levels/sandbox ===

$17054292175058 XXX
$10731996208080 XXX
$19454393978813 XXX
$14434122873489 XXX
$18405942066048 XXX
$10451578314373 XXX


=== levels/and_gate ===

$15232844525838 XXX
$15231724707514 XXX


=== ui/toggles/race_condition ===

$75558678297830 Circular dependency


=== levels/Crude Awakening ===

$12508086025944 XXX
$16321577947087 XXX
$19257730429557 XXX
$17675121574388 XXX


=== misc/circuit_color ===

$78287906849040 Wire color


=== misc/instr_clone ===

$69090690657232 Clone


=== levels/byte_or ===

$10368115829346 XXX
$15923734370936 XXX
$15226896485081 XXX


=== ui/toggles/level_log ===

$38557550573896 Level log


=== levels/Conditionals ===

$10794262854382 XXX
$18542005958715 XXX
$17133561664335 XXX
$14973719570693 XXX
$12920514303805 XXX
$14309211963063 XXX
$16826220977157 XXX
$14690660047411 XXX
$30132649789584 Watched state {number} should point to the output
$18994998239232 XXX
$12034111753799 Watched state {number} should point to the counter


=== misc/change_schematic ===

$79554853897000 Switch schematic


=== levels/byte_less ===

$11252365204151 XXX
$62766453128684 Is {a} less than {b}?
$11632471752785 XXX


=== levels/Logic Engine ===

$15865646260225 XXX
$17594613477534 XXX


=== levels/always_on ===

$17712385236630 XXX


=== levels/sr_latch ===

$18317133991943 XXX
$18165461234561 XXX
$15754153332116 XXX
$15213907597666 XXX
$19448398663695 XXX
$10290382368587 XXX


=== misc/inst_new_rule ===

$41064305626707 New rule


=== levels/byte_xor ===

$19636386696963 XXX


=== misc/multi_select ===

$85147529532131 Multi select (Hotkey: SHIFT & drag)


=== levels/binary_racer ===

$16076448195257 XXX
$37319690622142 Good job, you reached level {current_level}.
$19111664765554 XXX
$11176073682097 What is {number} in binary?
$71866932309393 You made it to level {level}!


=== levels/Immediate Values ===

$64348543296709 Watched state {value} should point to the output
$14060810229477 XXX
$79667526283284 Watched state {value} should point to the counter
$13396354780304 ARGUMENT 1
$14960344494328 XXX
$28668442247273 JUMP TO
$10788301006338 Watched state {nr} should point to a register or custom component with a register inside
$31564629398121 OPCODE
$14073567083496 ARGUMENT 2
$19338533633006 XXX
$15197362332657 XXX
$18004215603701 XXX
$98173834092208 RESULT ADDRESS
$10141611261952 XXX


=== levels/xor_gate ===

$14093358515620 XXX
$19182751521677 XXX


=== levels/xor ===

$11589029892097 XOR the bits of the inputs {a} and {b}
$12758156517177 XXX
$16047615798435 XXX


=== misc/menu ===

$56916384895438 Main menu


=== levels/Wire Spaghetti ===

$17106892574116 XXX
$20104629254326 ARGUMENT 2
$15754373587500 XXX
$56024330661504 Watched state {watched_state} should point to a register or custom component with a register inside
$19099471819164 XXX
$18860645759682 XXX
$11377431500625 XXX
$14051336765362 XXX
$38681417496680 ARGUMENT 1
$13268807052125 XXX
$30006055126224 Watched state {output} should point to the output
$19066122929275 XXX
$60997201855346 RESULT ADDRESS
$10912834168905 XXX
$10922418807673 XXX
$62258842382434 Watched state {counter} should point to the counter
$84307766381146 OPCODE
$20950946171790 JUMP TO
$18769284297247 XXX


=== levels/bit_adder ===

$13109388951000 XXX
$16564356062672 XXX


=== components/Output 3 ===

$96269858195218 Output


=== components/Output 1B ===

$77044600156969 Output


=== components/InputConditions ===

$75386511637758 Input


=== levels/and_gate_3 ===

$14788981567936 XXX


=== levels/double_number ===

$74261206899285 Your result {input} × 2 = {your_answer}\nCorrect result {input} × 2 = {correct_answer}
$19766257822639 XXX


=== levels/counting_signals ===

$10724914203078 XXX
$10881918807029 XXX



=== trans/manual_text_network ===

$70445160410129
[b]Vue d'ensemble[/b]
Le composant "Réseau' te donne un accès bas niveau à la communication en réseau. En général tu manipules ton réseau en envoyant des color=#e49f44]commandes[/color] au composants et quand des [color=#39aa49]évênements[/color] reviennent du réseau ils sont mis en file et tu les traite un à la fois. Pour suivre les différentes connexions simultanées on utilise des [color=#dd6576]IDs de Connexion[/color].

Voici les types de commande que tu peux envoyer au composant et leurs arguments :
[code]0[/code] Aucune commande
[code]1[/code] [color=#e49f44]Ecouter[/color] ([color=#dd6576]Port[/color])
[code]2[/code] [color=#e49f44]Se Connecter[/color] ([color=#dd6576]IP[/color], [color=#dd6576]Port[/color])
[code]3[/code] [color=#e49f44]Envoyer des données[/color] ([color=#dd6576]ID Connexion[/color], [color=#dd6576]Données[/color], [color=#dd6576]Taille des données[/color])
[code]4[/code] [color=#e49f44]Fermer[/color] ([color=#dd6576]ID Connexion[/color])
[code]5[/code] [color=#e49f44]Lire l'évênements suivant[/color]
[i]Voir le panneau du composant pour identifier les pattes correspondantes à chaque argument.[/i]

Les types de commandes [color=#e49f44]Ecouter[/color] et [color=#e49f44]Se Connecter[/color] génère en sortie le [color=#dd6576]ID Connexion[/color] de la nouvelle connexion. 

Pour que 2 programmes puissent s'[color=#e49f44]Envoyer des données[/color] l'un à l'autre, un programme (appelé serveur) doit d'abord [color=#e49f44]Ecouter[/color] sur un [color=#dd6576]Port[/color] et l'autre (le client) doit alors [color=#e49f44]Se Connecter[/color] en utilisant l'[color=#dd6576]IP[/color] du programme qui écoute et le [color=#dd6576]Port[/color] qu'il a choisi. Une fois la connexion établie, le serveur et le client fonctionnent exactement  pareil.

Remarque qu'une [color=#dd6576]IP[/color] est un nombre 32 bits, qui s'écrit normalement sous forme de 4 octets séparés par des points (par exemple : 127.0.0.1). Dans ce simulateur tu inverseras l'ordre des octets, ce qui fait que  127.0.0.1 devient 0x0100007F. 0x0100007F est toujours l'adresse de bouclage de tes ordinateurs et tu peux l'utiliser pour te connecter aux programmes du même ordinateur.

Tu peux détecter quand des évênements arrivent sur le réseau, en controlant la patte "type du prochain évênement". Voici les types d'évênement :
[code]0[/code] Pas d'évênement
[code]1[/code] [color=#39aa49]Connexion entrante[/color] ([color=#dd6576]ID Connexion[/color], [color=#dd6576]Port[/color])
[code]2[/code] [color=#39aa49]Connexion établie[/color]
[code]3[/code] [color=#39aa49]Réception de données[/color] ([color=#dd6576]ID Connexion, Données[/color], [color=#dd6576]Taille des données[/color])
[code]4[/code] [color=#39aa49]Connexion fermée[/color] ([color=#dd6576]ID Connexion[/color] / [color=#dd6576]Code d'Erreur[/color])

[color=#39aa49]Connexion entrante[/color] arrive seulement après un [color=#e49f44]Ecouter[/color]. Utilise le [color=#dd6576]Port[/color] pour différencier entre les écoutants (il n'est pas possible d'écouter deux fois sur le même port simultanément).

[color=#39aa49]Connexion établie[/color] arrive seulement après un [color=#e49f44]Se Connecter[/color], attend le avant de commencer à envoyer des données.

Tu peux envoyer ou recevoir entre 1 et 8 octets à la fois, utilise le paramètre [color=#dd6576]Taille des données[/color] pour choisir.

Une connexion peut être soit "potentiellement ouverte" ou "fermée". Il n'y a pas d'autre façon de savoir si la connexion est ouverte que d'envoyer des données. Les protocoles réseaux sous-jacents ont été conçus ainsi pour des raisons de fiabilité et de vitesse, ce n'est pas une limitation du simulateur.

Si tu obiens un [color=#dd6576]ID Connexion[/color] valant -1n cela signifie qu'il y a eu une erreur à la connexion.



=== trans/manual_sprite_display ===

$28358052747011
L'écran des sprites est un écran matriciel de résolution 640x480. Avant d'utiliser l'écran des sprites, tu dois d'abord attacher une carte de sprites, qui est une image PNG contenant tous tes sprites. Clique sur le composant et sélectionne la carte de sprites dans le panneau du composant.

La première patte d'entrée est le [color=#e49f44]Type de Commande[/color], et la signification des 3 pattes suivantes dépend du type de commande comme indiqué ci-dessous. L'ID de sprite est toujours un nombre 8 bits et toutes les autres valeurs (position et taille) sont toujours des pairs de valeurs 16 bits.
The first input pin is the [color=#e49f44]Command type[/color], the meaning of the next 3 pins depends on the command type as shown below. The sprite ID is always a 8 bit number and all other values (position and size) are always pairs of 16 bit values.

[table=2]
[cell]0[/cell] [cell]Pas de commande[/cell]
[cell]1[/cell] [cell][color=#e49f44]Charger le sprite[/color] (ID Sprite, Position, Taille)[/cell]
[cell][/cell][cell][i]Initialise le sprite associé à cet ID. La position est le coin supérieur gauche dans la carte de sprite.[/i][/cell]
[cell]2[/cell] [cell][color=#e49f44]Définit la position[/color] (ID Sprite, Position)[/cell]
[cell][/cell][cell][i]Ceci définit les coordonnées en X et Y du sprite chargé.[/i][/cell]
[/table]

[center][img=300]dialogue/manual/sprite_screen.png[/img][/center]

Note que les sprites sont empilés dans l'ordre de leurs ID et que pour supprimer une couche, il suffit de charger un sprite avec une largeur et une hauteur à 0.


=== trans/manual_text_matrix ===

$75170402412137
[b]Afficher des lettres[/b]
Il s'avère qu'un espace de 5x7 est petit mais suffisant pour afficher proprement des lettres. En ajoutant une ligne et une colonne supplémentaire, ces lettres rendront très bien les unes à la suite des autres.

[center][img]dialogue/manual/matrix_letter.png[/img][/center]


[b]Petit écran xxx[/b]
En tournant le composant, tu obtiens 8x6 pixels, qui a un ratio d'aspect intéressant de 4:3 et en juxtaposant plusieurs, tu peux obtenir la plupart des résolutions utiles. Les pattes sont définies dans ce composant spécialement pour permettre d'en juxtaposer plusieurs. Imaginez la conception naïve des broches où chaque composant est activé par un seul bit. Cela vous obligerait à connecter 1 fil pour chaque composant. Dans cette situation, le nombre de fils nécessaires pour un écran en mosaïque serait proportionnel à la surface, tandis que l'espace nécessaire pour ajuster les fils entre les composants, serait proportionnel à la circonférence.

[center][img]dialogue/manual/tilable_screen.png[/img][/center]

Au lieu de cela, en ayant 2 pattes d'activation, un fil peut activer une ligne entière et un autre une colonne entière. De cette façon, un seul composant peut être sélectionné par sa combinaison unique de lignes et de colonnes. De plus, l'ajustement du reste des données sur les mêmes fils signifie que les espaces horizontaux et verticaux n'ont besoin que d'une largeur de 1 pixel. Ce composant occupe visuellement un demi-pixel supplémentaire de tous les côtés, de sorte que ces composants peuvent être parfaitement juxtaposés, avec 1 carré caché entre eux pour faire passer les fils.


=== trans/manual_text_universal_gates ===

$37735744928195
Il s'avère que vous pouvez construire toute la logique d'un ordinateur à partir de portes NAND ou NOR. Les ordinateurs de guidage Apollo étaient entièrement construits de portes NOR. Conçus dans les années 60, ils n'avaient que 4 Ko de RAM et 32 Ko d'espace disque, mais ont conduit néanmoins les astronautes vers la lune.

Les ordinateurs modernes ne sont pas entièrement construits avec une seule des portes universelles, mais le cas échéant, les portes NAND sont préférées aux NOR, car elles ont moins de latence et occupent moins d'espace.


=== trans/panel_network_input_description ===

$36399689035136
[b][color=#e49f44]Type de requête[/color] (arguments)[/b]
[code]0[/code] Aucune requête
[code]1[/code] [color=#e49f44]Ecouter[/color] (Port)
[code]2[/code] [color=#e49f44]Se Connecter[/color] (IP, Port)
[code]3[/code] [color=#e49f44]Envoyer des données[/color] (ID Connexion, Données, Taille des données)
[code]4[/code] [color=#e49f44]Fermer[/color] (ID Connexion)
[code]5[/code] [color=#e49f44]Lire l'évênements suivant[/color]


